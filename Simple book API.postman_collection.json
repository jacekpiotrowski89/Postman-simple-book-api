{
	"info": {
		"_postman_id": "66368325-50d3-42bd-ad27-4ace15929bbd",
		"name": "Simple book API",
		"description": "kurs z yt",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "API authentication",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"const accessToken = (pm.response.json().accessToken)\r",
							"    pm.collectionVariables.set(\"Token\", accessToken);\r",
							"    //console.log(pm.response.json().accessToken)"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const emailuuid = require('uuid')\r",
							" let email=emailuuid()+'@domain.com'\r",
							" pm.environment.set('email',email)\r",
							"\r",
							"const usernameuuid = require('uuid')\r",
							" let username=usernameuuid()\r",
							" pm.environment.set('username', username)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"clientName\": \"{{username}}\",\r\n   \"clientEmail\": \"{{email}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseURL}}/api-clients",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"api-clients"
					]
				}
			},
			"response": []
		},
		{
			"name": "API status",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"const response = pm.response.json();\r",
							"//console.log(response.status);\r",
							"//console.log(response['status']);\r",
							"pm.test(\"API status is OK\", () => {\r",
							"    pm.expect(response.status).to.eql(\"OK\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BaseURL}}/status",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"status"
					]
				}
			},
			"response": []
		},
		{
			"name": "List of books",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"const response = pm.response.json();\r",
							"const nonfictionbook = response.filter((book) => book.available === true);\r",
							"//console.log(nonfictionbook[0]);\r",
							"const book = nonfictionbook[0];\r",
							"if (book) {\r",
							"    pm.globals.set(\"bookid\", book.id);\r",
							"}\r",
							"pm.test(\"Book Found\", () => {\r",
							"    pm.expect(book).to.be.an('object');\r",
							"    pm.expect(book.available).to.be.true;\r",
							"    //or\r",
							"    pm.expect(book.available).to.eql(true);\r",
							"    pm.expect(book.type).to.eql(\"non-fiction\");\r",
							"});\r",
							" \r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BaseURL}}/books?type=non-fiction",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"books"
					],
					"query": [
						{
							"key": "type",
							"value": "non-fiction"
						},
						{
							"key": "limit",
							"value": "2",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a single book",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"const response = pm.response.json ();\r",
							"//console.log(response['current-stock']);\r",
							"pm.test(\"Is in stock\", function () {\r",
							"    pm.expect(response['current-stock']).to.be.above(0);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseURL}}/books/:bookid",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"books",
						":bookid"
					],
					"variable": [
						{
							"key": "bookid",
							"value": "{{bookid}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Order book",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"const orderId = (pm.response.json().orderId); \r",
							"pm.collectionVariables.set(\"orderId\", orderId);\r",
							"\r",
							"console.log(orderId)"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"bookId\": {{bookid}},\r\n  \"customerName\": \"{{$randomFullName}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseURL}}/orders",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all book orders",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseURL}}/orders",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get single book order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseURL}}/orders/:orderid",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"orders",
						":orderid"
					],
					"variable": [
						{
							"key": "orderid",
							"value": "{{orderId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update an order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Token}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"customerName\": \"John\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseURL}}/orders/:orderid",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"orders",
						":orderid"
					],
					"variable": [
						{
							"key": "orderid",
							"value": "{{orderId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete an order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseURL}}/orders/:orderid",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"orders",
						":orderid"
					],
					"variable": [
						{
							"key": "orderid",
							"value": "{{orderId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Order book that doesnt exist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Token}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseURL}}/orders/:orderid",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"orders",
						":orderid"
					],
					"variable": [
						{
							"key": "orderid",
							"value": "xxxxxxxxxx"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "BaseURL",
			"value": "https://simple-books-api.glitch.me"
		},
		{
			"key": "Token",
			"value": "",
			"type": "default"
		},
		{
			"key": "orderId",
			"value": "",
			"type": "default"
		},
		{
			"key": "bookid",
			"value": "5",
			"type": "default"
		}
	]
}